{"version":3,"sources":["../../../es6/draw/handler/Polyline.js"],"names":[],"mappings":"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","file":"Polyline.js","sourcesContent":["/** @flow\n * StratoDem Analytics : Polyline\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport drawLocal from '../../draw';\nimport Tooltip from '../../Tooltip';\nimport Event from '../../Event';\nimport { GeometryUtil, TouchMarker } from '../../ext/index';\nimport Feature from './Feature';\nimport { TYPE_POLYGON, TYPE_POLYLINE } from './constants';\n\n\ntype T_POLYLINE_OPTIONS = {\n  allowIntersection?: boolean,\n  repeatMode?: boolean,\n  drawError?: {\n    color?: string,\n    timeout?: number,\n  },\n  icon?: L.Icon | L.DivIcon,\n  touchIcon?: L.Icon | L.DivIcon,\n  guidelineDistance?: number,\n  maxGuideLineLength?: number,\n  shapeOptions?: {\n    stroke?: boolean,\n    color?: string,\n    weight?: number,\n    opacity?: number,\n    fill?: boolean,\n    clickable?: boolean,\n  },\n  metric?: boolean,\n  feet?: boolean,\n  nautic?: boolean,\n  showLength?: boolean,\n  zIndexOffset?: number,\n};\n\ntype T_ORIGINAL_EVENT = {\n  clientX: number,\n  clientY: number,\n  latlng: L.LatLng,\n  touches: Array<{clientX: number, clientY: number}>,\n}\n\n\nconst DEFAULT_POLYLINE_OPTIONS: T_POLYLINE_OPTIONS = {\n  allowIntersection: true,\n  repeatMode: false,\n  drawError: {\n    color: '#b00b00',\n    timeout: 2500,\n    message: drawLocal.draw.handlers.polyline.error,\n  },\n  icon: new L.DivIcon({\n    iconSize: new L.Point(8, 8),\n    className: 'leaflet-div-icon leaflet-editing-icon',\n  }),\n  touchIcon: new L.DivIcon({\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-div-icon leaflet-editing-icon leaflet-touch-icon',\n  }),\n  guidelineDistance: 20,\n  maxGuideLineLength: 4000,\n  shapeOptions: {\n    stroke: true,\n    color: '#3388ff',\n    weight: 4,\n    opacity: 0.5,\n    fill: false,\n    clickable: true,\n  },\n  metric: true,           // Whether to use the metric measurement system or imperial\n  feet: true,             // When not metric, to use feet instead of yards for display.\n  nautic: false,          // When not metric, not feet use nautic mile for display\n  showLength: true,       // Whether to display distance in the tooltip\n  zIndexOffset: 2000,     // This should be > than the highest z-index any map layers\n};\n\nexport default class Polyline extends Feature {\n  Poly: L.Feature;\n  type: string;\n  _poly: L.Polyline;\n  _tooltip: Tooltip;\n  _markers: Array<TouchMarker>;\n\n  static TYPE = TYPE_POLYLINE;\n  static options = DEFAULT_POLYLINE_OPTIONS;\n\n  initialize(map: L.Map, options: T_POLYLINE_OPTIONS): void {\n    this.type = Polyline.TYPE;\n    this.Poly = Polyline.Poly;\n\n    // If touch, switch to touch icon\n    const defaultIcon = L.Browser.touch ? Polyline.options.touchIcon : Polyline.options.icon;\n    super.initialize(map, {\n      ...Polyline.options,\n      icon: defaultIcon,\n      ...options,\n      drawError: {\n        ...Polyline.drawError,\n        ...typeof options !== 'undefined' && options.drawError !== 'undefined'\n          ? options.drawError\n          : {},\n      },\n    });\n  }\n\n  /** Add listener hooks to this handler **/\n  addHooks(): void {\n    super.addHooks();\n    if (this._map) {\n      this._markers = [];\n\n      this._markerGroup = new L.LayerGroup();\n      this._map.addLayer(this._markerGroup);\n\n      this._poly = new L.Polyline([], this.options.shapeOptions);\n\n      this._tooltip.updateContent(this._getTooltipText());\n\n      // Make a transparent marker that will used to catch click events. These click\n      // events will create the vertices. We need to do this so we can ensure that\n      // we can create vertices over other map layers (markers, vector layers). We\n      // also do not want to trigger any click handlers of objects we are clicking on\n      // while drawing.\n      if (!this._mouseMarker) {\n        this._mouseMarker = L.marker(this._map.getCenter(), {\n          icon: L.divIcon({\n            className: 'leaflet-mouse-marker',\n            iconAnchor: [20, 20],\n            iconSize: [40, 40],\n          }),\n          opacity: 0,\n          zIndexOffset: this.options.zIndexOffset,\n        });\n      }\n\n      this._mouseMarker\n        .on('mouseout', this._onMouseOut, this)\n        .on('mousemove', this._onMouseMove, this) // Necessary to prevent 0.8 stutter\n        .on('mousedown', this._onMouseDown, this)\n        .on('mouseup', this._onMouseUp, this)     // Necessary for 0.8 compatibility\n        .addTo(this._map);\n\n      this._map\n        .on('mouseup', this._onMouseUp, this)     // Necessary for 0.7 compatibility\n        .on('mousemove', this._onMouseMove, this)\n        .on('zoomlevelschange', this._onZoomEnd, this)\n        .on('touchstart', this._onTouch, this)\n        .on('zoomend', this._onZoomEnd, this);\n    }\n  }\n\n  /** Remove listener hooks from this handler **/\n  removeHooks(): void {\n    super.removeHooks();\n\n    this._clearHideErrorTimeout();\n\n    this._cleanUpShape();\n\n    // remove markers from map\n    this._map.removeLayer(this._markerGroup);\n    delete this._markerGroup;\n    delete this._markers;\n\n    this._map.removeLayer(this._poly);\n    delete this._poly;\n\n    this._mouseMarker\n      .off('mousedown', this._onMouseDown, this)\n      .off('mouseout', this._onMouseOut, this)\n      .off('mouseup', this._onMouseUp, this)\n      .off('mousemove', this._onMouseMove, this);\n    this._map.removeLayer(this._mouseMarker);\n    delete this._mouseMarker;\n\n    // clean up DOM\n    this._clearGuides();\n\n    this._map\n      .off('mouseup', this._onMouseUp, this)\n      .off('mousemove', this._onMouseMove, this)\n      .off('zoomlevelschange', this._onZoomEnd, this)\n      .off('zoomend', this._onZoomEnd, this)\n      .off('touchstart', this._onTouch, this)\n      .off('click', this._onTouch, this);\n  }\n\n  /** Remove the last vertex from the polyline, removes from map if only one point exists. **/\n  deleteLastVertex(): void {\n    if (this._markers.length <= 1)\n      return;\n\n    const lastMarker = this._markers.pop();\n    const poly = this._poly;\n    const latlngs = poly.getLatLngs();\n    const latlng = latlngs.splice(-1, 1)[0];\n    this._poly.setLatLngs(latlngs);\n\n    this._markerGroup.removeLayer(lastMarker);\n\n    if (poly.getLatLngs().length < 2)\n      this._map.removeLayer(poly);\n\n    this._vertexChanged(latlng, false);\n  }\n\n  /** Add a vertex to the end of the polyline **/\n  addVertex(latlng: L.LatLng): void {\n    const markersLength = this._markers.length;\n    // markersLength must be greater than or equal to 2 before intersections can occur\n    if (markersLength >= 2\n      && !this.options.allowIntersection\n      && this._poly.newLatLngIntersects(latlng)) {\n      this._showErrorTooltip();\n      return;\n    } else if (this._errorShown) {\n      this._hideErrorTooltip();\n    }\n\n    this._markers.push(this._createMarker(latlng));\n\n    this._poly.addLatLng(latlng);\n\n    if (this._poly.getLatLngs().length === 2)\n      this._map.addLayer(this._poly);\n\n    this._vertexChanged(latlng, true);\n  }\n\n  /** Closes the polyline between the first and last points **/\n  completeShape(): void {\n    if (this._markers.length <= 1)\n      return;\n\n    this._fireCreatedEvent();\n    this.disable();\n\n    if (this.options.repeatMode)\n      this.enable();\n  }\n\n  _finishShape(): void {\n    const latlngs = this._poly._defaultShape ? this._poly._defaultShape() : this._poly.getLatLngs();\n    const intersects = this._poly.newLatLngIntersects(latlngs[latlngs.length - 1]);\n\n    if ((!this.options.allowIntersection && intersects) || !this._shapeIsValid()) {\n      this._showErrorTooltip();\n      return;\n    }\n\n    this._fireCreatedEvent();\n    this.disable();\n    if (this.options.repeatMode)\n      this.enable();\n  }\n\n  /** Verify that the shape is valid when the user tries to finish it **/\n  // eslint-disable-next-line\n  _shapeIsValid(): boolean {\n    return true;\n  }\n\n  _onZoomEnd(): void {\n    if (this._markers !== null)\n      this._updateGuide();\n  }\n\n  _onMouseMove(event: {originalEvent: Object}): void {\n    const newPos = this._map.mouseEventToLayerPoint(event.originalEvent);\n    const latlng = this._map.layerPointToLatLng(newPos);\n\n    // Save latlng\n    // should this be moved to _updateGuide() ?\n    this._currentLatLng = latlng;\n\n    this._updateTooltip(latlng);\n\n    // Update the guide line\n    this._updateGuide(newPos);\n\n    // Update the mouse marker position\n    this._mouseMarker.setLatLng(latlng);\n\n    L.DomEvent.preventDefault(event.originalEvent);\n  }\n\n  _vertexChanged(latlng: L.LatLng, added: boolean): void {\n    this._map.fire(Event.DRAWVERTEX, { layers: this._markerGroup });\n    this._updateFinishHandler();\n\n    this._updateRunningMeasure(latlng, added);\n\n    this._clearGuides();\n\n    this._updateTooltip();\n  }\n\n  _onMouseDown(event: {originalEvent: T_ORIGINAL_EVENT}): void {\n    if (!this._clickHandled && !this._touchHandled && !this._disableMarkers) {\n      this._onMouseMove(event);\n      this._clickHandled = true;\n      this._disableNewMarkers();\n      const originalEvent = event.originalEvent;\n      const clientX = originalEvent.clientX;\n      const clientY = originalEvent.clientY;\n      this._startPoint.call(this, clientX, clientY);\n    }\n  }\n\n  _startPoint(clientX: number, clientY: number): void {\n    this._mouseDownOrigin = L.point(clientX, clientY);\n  }\n\n  _onMouseUp(event: {originalEvent: T_ORIGINAL_EVENT}): void {\n    const originalEvent = event.originalEvent;\n    const { clientX, clientY } = originalEvent;\n    this._endPoint(clientX, clientY, originalEvent);\n    this._clickHandled = null;\n  }\n\n  // $FlowFixMe\n  _endPoint(clientX: number, clientY: number, event: T_ORIGINAL_EVENT): void {\n    if (this._mouseDownOrigin) {\n      const dragCheckDistance = L.point(clientX, clientY)\n        .distanceTo(this._mouseDownOrigin);\n      const lastPtDistance = this._calculateFinishDistance(event.latlng);\n      if (lastPtDistance < 10 && L.Browser.touch) {\n        this._finishShape();\n      } else if (Math.abs(dragCheckDistance) < 9 * (window.devicePixelRatio || 1)) {\n        this.addVertex(event.latlng);\n      }\n      this._enableNewMarkers(); // after a short pause, enable new markers\n    }\n    this._mouseDownOrigin = null;\n  }\n\n  /** onTouch prevented by clickHandled flag because some browsers fire both click/touch events **/\n  _onTouch(event: {originalEvent: T_ORIGINAL_EVENT}): void {\n    const originalEvent = event.originalEvent;\n    if (originalEvent.touches\n      && originalEvent.touches[0]\n      && !this._clickHandled\n      && !this._touchHandled\n      && !this._disableMarkers) {\n      const clientX = originalEvent.touches[0].clientX;\n      const clientY = originalEvent.touches[0].clientY;\n      this._disableNewMarkers();\n      this._touchHandled = true;\n      this._startPoint(clientX, clientY);\n      this._endPoint(clientX, clientY, event);\n      this._touchHandled = null;\n    }\n    this._clickHandled = null;\n  }\n\n  _onMouseOut(): void {\n    if (this._tooltip)\n      this._tooltip._onMouseOut.call(this._tooltip);\n  }\n\n  /**\n   * Calculate if we are currently within close enough distance\n   * of the closing point (first point for shapes, last poitn for lines)\n   * Note: This is pretty ugly code\n   * Note: Calculating point.distanceTo between mouseDownOrigin and last marker did NOT work\n   */\n  _calculateFinishDistance(potentialLatLng: L.LatLng): number {\n    let lastPtDistance;\n\n    if (this._markers.length > 0) {\n      let finishMarker;\n\n      if (this.type === TYPE_POLYLINE)\n        finishMarker = this._markers[this._markers.length - 1];\n      else if (this.type === TYPE_POLYGON)\n        finishMarker = this._markers[0];\n      else\n        return Infinity;\n\n      const lastMarkerPoint = this._map.latLngToContainerPoint(finishMarker.getLatLng());\n      const potentialMarker = new L.Marker(potentialLatLng, {\n        icon: this.options.icon,\n        zIndexOffset: this.options.zIndexOffset * 2,\n      });\n      const potentialMarkerPint = this._map.latLngToContainerPoint(potentialMarker.getLatLng());\n      lastPtDistance = lastMarkerPoint.distanceTo(potentialMarkerPint);\n    } else {\n      lastPtDistance = Infinity;\n    }\n\n    return lastPtDistance;\n  }\n\n  _updateFinishHandler(): void {\n    const markerCount = this._markers.length;\n    // The last marker should have a click handler to close the polyline\n    if (markerCount > 1)\n      this._markers[markerCount - 1].on('click', this._finishShape, this);\n\n    // Remove the old marker click handler (as only the last point should close the polyline)\n    if (markerCount > 2)\n      this._markers[markerCount - 2].off('click', this._finishShape, this);\n  }\n\n  _createMarker(latlng: L.LatLng): L.Marker {\n    const marker = new L.Marker(latlng, {\n      icon: this.options.icon,\n      zIndexOffset: this.options.zIndexOffset * 2,\n    });\n\n    this._markerGroup.addLayer(marker);\n\n    return marker;\n  }\n\n  _updateGuide(newPos?: Object): void {\n    const markerCount = this._markers ? this._markers.length : 0;\n\n    if (markerCount > 0) {\n      // draw the guide line\n      this._clearGuides();\n      this._drawGuide(\n        this._map.latLngToLayerPoint(this._markers[markerCount - 1].getLatLng()),\n        newPos || this._map.latLngToLayerPoint(this._currentLatLng));\n    }\n  }\n\n  _updateTooltip(latLng: L.LatLng): void {\n    const text = this._getTooltipText();\n\n    if (latLng)\n      this._tooltip.updatePosition(latLng);\n\n    if (!this._errorShown)\n      this._tooltip.updateContent(text);\n  }\n\n  _drawGuide(pointA: {x: number, y: number}, pointB: {x: number, y: number}): void {\n    const length = Math.floor(\n      Math.sqrt(((pointB.x - pointA.x) ** 2) + ((pointB.y - pointA.y) ** 2)));\n    const guidelineDistance = this.options.guidelineDistance;\n    const maxGuideLineLength = this.options.maxGuideLineLength;\n    //\n    let fraction;\n    let dashPoint;\n    let dash;\n\n    // create the guides container if we haven't yet\n    if (!this._guidesContainer) {\n      this._guidesContainer = L.DomUtil.create('div', 'leaflet-draw-guides', this._overlayPane);\n    }\n\n    // draw a dash every GuildeLineDistance, Only draw a guideline with a max length\n    for (let i = length > maxGuideLineLength ? length - maxGuideLineLength : guidelineDistance;\n         i < length;\n         i += this.options.guidelineDistance) {\n      // work out fraction along line we are\n      fraction = i / length;\n\n      // calculate new x,y point\n      dashPoint = {\n        x: Math.floor((pointA.x * (1 - fraction)) + (fraction * pointB.x)),\n        y: Math.floor((pointA.y * (1 - fraction)) + (fraction * pointB.y)),\n      };\n\n      // add guide dash to guide container\n      dash = L.DomUtil.create('div', 'leaflet-draw-guide-dash', this._guidesContainer);\n      dash.style.backgroundColor\n        = !this._errorShown ? this.options.shapeOptions.color : this.options.drawError.color;\n\n      L.DomUtil.setPosition(dash, dashPoint);\n    }\n  }\n\n  _updateGuideColor(color: string): void {\n    if (this._guidesContainer) {\n      for (let i = 0, l = this._guidesContainer.childNodes.length; i < l; i += 1) {\n        this._guidesContainer.childNodes[i].style.backgroundColor = color;\n      }\n    }\n  }\n\n  /** Remove all child elements (guide dashes) from the guides container **/\n  _clearGuides(): void {\n    if (this._guidesContainer) {\n      while (this._guidesContainer.firstChild) {\n        this._guidesContainer.removeChild(this._guidesContainer.firstChild);\n      }\n    }\n  }\n\n  _getTooltipText(): {text: string, subtext?: string} {\n    let showLength = this.options.showLength;\n    let labelText;\n    let distanceStr;\n    if (L.Browser.touch)\n      showLength = false; // if there's a better place to put this, feel free to move it\n\n    if (this._markers.length === 0) {\n      labelText = {text: drawLocal.draw.handlers.polyline.tooltip.start};\n    } else {\n      distanceStr = showLength ? this._getMeasurementString() : '';\n\n      if (this._markers.length === 1)\n        labelText = {\n          text: drawLocal.draw.handlers.polyline.tooltip.cont,\n          subtext: distanceStr,\n        };\n      else\n        labelText = {\n          text: drawLocal.draw.handlers.polyline.tooltip.end,\n          subtext: distanceStr,\n        };\n    }\n    return labelText;\n  }\n\n  _updateRunningMeasure(latlng: L.LatLng, added: boolean): void {\n    const markersLength = this._markers.length;\n    let previousMarkerIndex;\n    let distance;\n\n    if (this._markers.length === 1) {\n      this._measurementRunningTotal = 0;\n    } else {\n      previousMarkerIndex = markersLength - (added ? 2 : 1);\n      distance = latlng.distanceTo(this._markers[previousMarkerIndex].getLatLng());\n\n      this._measurementRunningTotal += distance * (added ? 1 : -1);\n    }\n  }\n\n  _getMeasurementString(): string {\n    const currentLatLng = this._currentLatLng;\n    const previousLatLng = this._markers[this._markers.length - 1].getLatLng();\n\n    // calculate the distance from the last fixed point to the mouse position\n    const distance = previousLatLng\n    && currentLatLng\n    && currentLatLng.distanceTo\n      ? this._measurementRunningTotal + currentLatLng.distanceTo(previousLatLng)\n      : this._measurementRunningTotal || 0;\n\n    return GeometryUtil.readableDistance(\n      distance,\n      this.options.metric,\n      this.options.feet,\n      this.options.nautic,\n      this.options.precision);\n  }\n\n  _showErrorTooltip(): void {\n    this._errorShown = true;\n\n    // Update tooltip\n    this._tooltip\n      .showAsError()\n      .updateContent({ text: this.options.drawError.message });\n\n    // Update shape\n    this._updateGuideColor(this.options.drawError.color);\n    this._poly.setStyle({ color: this.options.drawError.color });\n\n    // Hide the error after 2 seconds\n    this._clearHideErrorTimeout();\n    this._hideErrorTimeout = setTimeout(\n      L.Util.bind(this._hideErrorTooltip, this),\n      this.options.drawError.timeout);\n  }\n\n  _hideErrorTooltip(): void {\n    this._errorShown = false;\n\n    this._clearHideErrorTimeout();\n\n    // Revert tooltip\n    this._tooltip\n      .removeError()\n      .updateContent(this._getTooltipText());\n\n    // Revert shape\n    this._updateGuideColor(this.options.shapeOptions.color);\n    this._poly.setStyle({ color: this.options.shapeOptions.color });\n  }\n\n  _clearHideErrorTimeout(): void {\n    if (this._hideErrorTimeout) {\n      clearTimeout(this._hideErrorTimeout);\n      this._hideErrorTimeout = null;\n    }\n  }\n\n  /** Disable new markers temporarily to prevent duplicated touch/click events in some browsers**/\n  _disableNewMarkers(): void {\n    this._disableMarkers = true;\n  }\n\n  /** Re-enable new markers **/\n  _enableNewMarkers(): void {\n    setTimeout(() => { this._disableMarkers = false; }, 50);\n  }\n\n  _cleanUpShape(): void {\n    if (this._markers.length > 1)\n      this._markers[this._markers.length - 1].off('click', this._finishShape, this);\n  }\n\n  _fireCreatedEvent(): void {\n    const poly = new this.Poly(this._poly.getLatLngs(), this.options.shapeOptions);\n    super._fireCreatedEvent(poly);\n  }\n}\n"]}