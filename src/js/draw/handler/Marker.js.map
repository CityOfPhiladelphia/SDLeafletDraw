{"version":3,"sources":["../../../es6/draw/handler/Marker.js"],"names":[],"mappings":"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","file":"Marker.js","sourcesContent":["/** @flow\n * StratoDem Analytics : Draw.Marker\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport drawLocal from '../../draw';\nimport { TouchMarker } from '../../ext/index';\nimport Feature from './Feature';\nimport { TYPE_MARKER } from './constants';\n\ntype T_MARKER_OPTIONS = {\n  icon?: L.Icon,\n  repeatMode?: boolean,\n  zIndexOffset?: number,\n};\n\n\nconst DEFAULT_MARKER_OPTIONS: T_MARKER_OPTIONS = {\n  icon: new L.Icon.Default(),\n  repeatMode: false,\n  zIndexOffset: 2000,  // This should be > than the highest z-index any markers\n};\n\nexport default class Marker extends Feature {\n  static options = DEFAULT_MARKER_OPTIONS;\n  static TYPE = TYPE_MARKER;\n\n  initialize(map: L.Map, options: T_MARKER_OPTIONS) {\n    super.initialize(map, {...Marker.options, ...options});\n    // Save the type so super can fire, need to do this as cannot do this.TYPE :(\n    this.type = Marker.TYPE;\n  }\n\n  /** Add listener hooks to this handler **/\n  addHooks(): void {\n    super.addHooks();\n\n    if (this._map) {\n      this._tooltip.updateContent({ text: drawLocal.draw.handlers.marker.tooltip.start });\n\n      // Same mouseMarker as in Draw.Polyline\n      if (!this._mouseMarker) {\n        this._mouseMarker = L.marker(this._map.getCenter(), {\n          icon: L.divIcon({\n            className: 'leaflet-mouse-marker',\n            iconAnchor: [20, 20],\n            iconSize: [40, 40],\n          }),\n          opacity: 0,\n          zIndexOffset: this.options.zIndexOffset,\n        });\n      }\n\n      this._mouseMarker\n        .on('click', this._onClick, this)\n        .addTo(this._map);\n\n      this._map.on('mousemove', this._onMouseMove, this);\n      this._map.on('click', this._onTouch, this);\n    }\n  }\n\n  /** Remove listener hooks from this handler **/\n  removeHooks(): void {\n    super.removeHooks();\n\n    if (this._map) {\n      if (this._marker) {\n        this._marker.off('click', this._onClick, this);\n        this._map\n          .off('click', this._onClick, this)\n          .off('click', this._onTouch, this)\n          .removeLayer(this._marker);\n        delete this._marker;\n      }\n\n      this._mouseMarker.off('click', this._onClick, this);\n      this._map.removeLayer(this._mouseMarker);\n      delete this._mouseMarker;\n\n      this._map.off('mousemove', this._onMouseMove, this);\n    }\n  }\n\n  _onMouseMove(event: {latlng: L.LatLng}): void {\n    const { latlng } = event;\n\n    this._tooltip.updatePosition(latlng);\n    this._mouseMarker.setLatLng(latlng);\n\n    if (!this._marker) {\n      this._marker = new L.Marker(latlng, {\n        icon: this.options.icon,\n        zIndexOffset: this.options.zIndexOffset,\n      });\n      // Bind to both marker and map to make sure we get the click event.\n      this._marker.on('click', this._onClick, this);\n      this._map\n        .on('click', this._onClick, this)\n        .addLayer(this._marker);\n    } else {\n      this._marker.setLatLng(this._mouseMarker.getLatLng());\n    }\n  }\n\n  _onClick(): void {\n    this._fireCreatedEvent();\n\n    this.disable();\n    if (this.options.repeatMode)\n      this.enable();\n  }\n\n  /** Handle touch event **/\n  _onTouch(event: {latlng: L.LatLng}): void {\n    this._onMouseMove(event);   // Creates & places marker\n    this._onClick();            // Permanently places marker and ends interaction\n  }\n\n  _fireCreatedEvent(): void {\n    const marker = new TouchMarker(this._marker.getLatLng(), { icon: this.options.icon });\n    super._fireCreatedEvent(marker);\n  }\n}\n"]}