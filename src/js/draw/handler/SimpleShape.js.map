{"version":3,"sources":["../../../es6/draw/handler/SimpleShape.js"],"names":[],"mappings":"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","file":"SimpleShape.js","sourcesContent":["/** @flow\n * StratoDem Analytics : SimpleShape\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport drawLocal from '../../draw';\nimport Feature from './Feature';\n\n\nexport type T_SIMPLESHAPE_OPTIONS = {\n  shapeOptions?: {\n    stroke?: boolean,\n    color?: string,\n    weight?: number,\n    opacity?: number,\n    fill?: boolean,\n    fillColor?: string | null, // same as color by default\n    fillOpacity?: number,\n    showArea?: boolean,\n    clickable?: boolean,\n  },\n  showRadius?: boolean,\n  metric?: boolean,\n  feet?: boolean,\n  nautic?: boolean,\n}\n\n\nexport default class SimpleShape extends Feature {\n  initialize(map: L.Map, options: T_SIMPLESHAPE_OPTIONS): void {\n    this._endLabelText = drawLocal.draw.handlers.simpleshape.tooltip.end;\n\n    super.initialize(map, {repeatMode: false, ...options});\n  }\n\n  /** Add listener hooks to this handler **/\n  addHooks(): void {\n    super.addHooks();\n    if (this._map) {\n      this._mapDraggable = this._map.dragging.enabled();\n\n      if (this._mapDraggable) {\n        this._map.dragging.disable();\n      }\n\n      // TODO refactor: move cursor to styles\n      this._container.style.cursor = 'crosshair';\n\n      this._tooltip.updateContent({ text: this._initialLabelText });\n\n      this._map\n        .on('mousedown', this._onMouseDown, this)\n        .on('mousemove', this._onMouseMove, this)\n        .on('touchstart', this._onMouseDown, this)\n        .on('touchmove', this._onMouseMove, this);\n    }\n  }\n\n  /** Remove listener hooks from this handler **/\n  removeHooks(): void {\n    super.removeHooks();\n    if (this._map) {\n      if (this._mapDraggable)\n        this._map.dragging.enable();\n\n      // TODO refactor: move cursor to styles\n      this._container.style.cursor = '';\n\n      this._map\n        .off('mousedown', this._onMouseDown, this)\n        .off('mousemove', this._onMouseMove, this)\n        .off('touchstart', this._onMouseDown, this)\n        .off('touchmove', this._onMouseMove, this);\n\n      L.DomEvent.off(document, 'mouseup', this._onMouseUp, this);\n      L.DomEvent.off(document, 'touchend', this._onMouseUp, this);\n\n      // If the box element doesn't exist mouse hasn't moved, so don't need to destroy/return\n      if (this._shape) {\n        this._map.removeLayer(this._shape);\n        delete this._shape;\n      }\n    }\n    this._isDrawing = false;\n  }\n\n  _getTooltipText(): {text: string} {\n    return {text: this._endLabelText};\n  }\n\n  _onMouseDown(event: {latlng: L.LatLng, originalEvent: Object}): void {\n    this._isDrawing = true;\n    this._startLatLng = event.latlng;\n\n    L.DomEvent\n      .on(document, 'mouseup', this._onMouseUp, this)\n      .on(document, 'touchend', this._onMouseUp, this)\n      .preventDefault(event.originalEvent);\n  }\n\n  _onMouseMove(event: {latlng: L.LatLng}): void {\n    const latlng = event.latlng;\n\n    this._tooltip.updatePosition(latlng);\n    if (this._isDrawing) {\n      this._tooltip.updateContent(this._getTooltipText());\n      this._drawShape(latlng);\n    }\n  }\n\n  _onMouseUp(): void {\n    if (this._shape)\n      this._fireCreatedEvent();\n\n    this.disable();\n    if (this.options.repeatMode)\n      this.enable();\n  }\n}\n"]}