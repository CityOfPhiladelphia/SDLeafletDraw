{"version":3,"sources":["../../../es6/edit/handler/SimpleShape.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;;AAEA;;;;AAZA;;;;;;;;;;AA2BA,IAAM,8BAAqD;AACzD,YAAU,IAAI,kBAAE,OAAN,CAAc;AACtB,cAAU,IAAI,kBAAE,KAAN,CAAY,CAAZ,EAAe,CAAf,CADY;AAEtB,eAAW;AAFW,GAAd,CAD+C;AAKzD,cAAY,IAAI,kBAAE,OAAN,CAAc;AACxB,cAAU,IAAI,kBAAE,KAAN,CAAY,CAAZ,EAAe,CAAf,CADc;AAExB,eAAW;AAFa,GAAd,CAL6C;AASzD,iBAAe,IAAI,kBAAE,OAAN,CAAc;AAC3B,cAAU,IAAI,kBAAE,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CADiB;AAE3B,eAAW;AAFgB,GAAd,CAT0C;AAazD,mBAAiB,IAAI,kBAAE,OAAN,CAAc;AAC7B,cAAU,IAAI,kBAAE,KAAN,CAAY,EAAZ,EAAgB,EAAhB,CADmB;AAE7B,eAAW;AAFkB,GAAd;AAbwC,CAA3D;;IAmBqB,W;;;;;;;;;;+BAKR,K,EAAkB,O,EAAsC;AACjE;AACA,UAAM,WAAW,kBAAE,OAAF,CAAU,KAAV,GACb,YAAY,OAAZ,CAAoB,aADP,GAEb,YAAY,OAAZ,CAAoB,QAFxB;AAGA,UAAM,aAAa,kBAAE,OAAF,CAAU,KAAV,GACf,YAAY,OAAZ,CAAoB,eADL,GAEf,YAAY,OAAZ,CAAoB,UAFxB;;AAIA,WAAK,MAAL,GAAc,KAAd;AACA,wBAAE,IAAF,CAAO,UAAP,CAAkB,IAAlB;AACE,0BADF;AAEE,8BAFF;AAGE,uBAAe,YAAY,OAAZ,CAAoB,aAHrC;AAIE,yBAAiB,YAAY,OAAZ,CAAoB;AAJvC,SAKK,OALL;AAOD;;AAED;;;;+BACiB;AACf,UAAM,QAAQ,KAAK,MAAnB;AACA,UAAI,KAAK,MAAL,CAAY,IAAhB,EAAsB;AACpB,aAAK,IAAL,GAAY,KAAK,MAAL,CAAY,IAAxB;AACA,cAAM,QAAN,CAAe,MAAM,OAAN,CAAc,OAA7B;;AAEA,YAAI,MAAM,IAAV,EAAgB;AACd,eAAK,IAAL,GAAY,MAAM,IAAlB;AACA,cAAI,CAAC,KAAK,YAAV,EAAwB;AACtB,iBAAK,YAAL;AACD;AACD,eAAK,IAAL,CAAU,QAAV,CAAmB,KAAK,YAAxB;AACD;AACF;AACF;;AAED;;;;kCACoB;AAAA;;AAClB,UAAM,QAAQ,KAAK,MAAnB;;AAEA,YAAM,QAAN,CAAe,MAAM,OAAN,CAAc,QAA7B;;AAEA,UAAI,MAAM,IAAV,EAAgB;AACd,aAAK,aAAL,CAAmB,KAAK,WAAxB;;AAEA,aAAK,cAAL,CAAoB,OAApB,CAA4B;AAAA,iBAAU,OAAK,aAAL,CAAmB,MAAnB,CAAV;AAAA,SAA5B;AACA,aAAK,cAAL,GAAsB,IAAtB;;AAEA,aAAK,IAAL,CAAU,WAAV,CAAsB,KAAK,YAA3B;AACA,eAAO,KAAK,YAAZ;AACD;;AAED,WAAK,IAAL,GAAY,IAAZ;AACD;;AAED;;;;oCACsB;AACpB,WAAK,YAAL,CAAkB,WAAlB;AACA,WAAK,YAAL;AACD;;;mCAEoB;AACnB,UAAI,CAAC,KAAK,YAAV,EACE,KAAK,YAAL,GAAoB,IAAI,kBAAE,UAAN,EAApB;;AAEF;AACA,WAAK,iBAAL;;AAEA;AACA,WAAK,mBAAL;AACD;;AAED;;;;wCAC0B,CACzB,C,CAD2B;;;AAG5B;;;;0CAC4B,CAAE;AAC7B;;;kCAEa,M,EAAkB,I,EAAuC;AACrE,UAAM,SAAS,uBAAgB,MAAhB,EAAwB;AACrC,mBAAW,IAD0B;AAErC,kBAFqC;AAGrC,sBAAc;AAHuB,OAAxB,CAAf;;AAMA,WAAK,WAAL,CAAiB,MAAjB;;AAEA,WAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3B;;AAEA,aAAO,MAAP;AACD;;;gCAEW,M,EAA2B;AACrC,aACG,EADH,CACM,WADN,EACmB,KAAK,kBADxB,EAC4C,IAD5C,EAEG,EAFH,CAEM,MAFN,EAEc,KAAK,aAFnB,EAEkC,IAFlC,EAGG,EAHH,CAGM,SAHN,EAGiB,KAAK,gBAHtB,EAGwC,IAHxC,EAIG,EAJH,CAIM,YAJN,EAIoB,KAAK,aAJzB,EAIwC,IAJxC,EAKG,EALH,CAKM,WALN,EAKmB,KAAK,YALxB,EAKsC,IALtC,EAMG,EANH,CAMM,eANN,EAMuB,KAAK,YAN5B,EAM0C,IAN1C,EAOG,EAPH,CAOM,UAPN,EAOkB,KAAK,WAPvB,EAOoC,IAPpC,EAQG,EARH,CAQM,aARN,EAQqB,KAAK,WAR1B,EAQuC,IARvC;AASD;;;kCAEa,M,EAA2B;AACvC,aACG,GADH,CACO,WADP,EACoB,KAAK,kBADzB,EAC6C,IAD7C,EAEG,GAFH,CAEO,MAFP,EAEe,KAAK,aAFpB,EAEmC,IAFnC,EAGG,GAHH,CAGO,SAHP,EAGkB,KAAK,gBAHvB,EAGyC,IAHzC,EAIG,GAJH,CAIO,YAJP,EAIqB,KAAK,aAJ1B,EAIyC,IAJzC,EAKG,GALH,CAKO,WALP,EAKoB,KAAK,YALzB,EAKuC,IALvC,EAMG,GANH,CAMO,eANP,EAMwB,KAAK,YAN7B,EAM2C,IAN3C,EAOG,GAPH,CAOO,UAPP,EAOmB,KAAK,WAPxB,EAOqC,IAPrC,EAQG,GARH,CAQO,aARP,EAQsB,KAAK,WAR3B,EAQwC,IARxC;AASD;;;uCAEkB,K,EAAoC;AACrD,UAAM,SAAS,MAAM,MAArB;AACA,aAAO,UAAP,CAAkB,CAAlB;;AAEA,WAAK,MAAL,CAAY,IAAZ,CAAiB,WAAjB;AACD;;;gCAEiB;AAChB,WAAK,MAAL,CAAY,MAAZ,GAAqB,IAArB;AACA,WAAK,MAAL,CAAY,IAAZ,CAAiB,MAAjB;AACD;;;kCAEa,K,EAAoC;AAChD,UAAM,SAAS,MAAM,MAArB;AACA,UAAM,SAAS,OAAO,SAAP,EAAf;;AAEA,UAAI,WAAW,KAAK,WAApB,EAAiC;AAC/B,aAAK,KAAL,CAAW,MAAX,EADF,KAEK;AACH,aAAK,OAAL,CAAa,MAAb;;AAEF,WAAK,MAAL,CAAY,MAAZ;AACA,WAAK,MAAL,CAAY,IAAZ,CAAiB,UAAjB;AACD;;;qCAEgB,K,EAAoC;AACnD,UAAM,SAAS,MAAM,MAArB;AACA,aAAO,UAAP,CAAkB,CAAlB;;AAEA,WAAK,SAAL;AACD;;;kCAEa,K,EAAoC;AAChD,kBAAY,SAAZ,CAAsB,kBAAtB,CAAyC,IAAzC,CAA8C,IAA9C,EAAoD,KAApD;;AAEA,UAAI,OAAO,KAAK,WAAZ,KAA4B,UAAhC,EAA4C;AAC1C;AACA,YAAM,UAAU,KAAK,WAAL,EAAhB;AACA,YAAM,SAAS,MAAM,MAArB;AACA,YAAM,qBAAqB,OAAO,YAAlC;;AAEA,eAAO,UAAP,CAAkB,CAAlB;;AAEA;AACA;AACA,aAAK,eAAL,GAAuB,QAAQ,CAAC,qBAAqB,CAAtB,IAA2B,CAAnC,CAAvB;AACA,aAAK,oBAAL,CAA0B,CAA1B,EAA6B,kBAA7B;AACD;;AAED,WAAK,MAAL,CAAY,IAAZ,CAAiB,WAAjB;AACD;;;iCAEY,K,EAAwE;AACnF,UAAM,aAAa,KAAK,IAAL,CAAU,sBAAV,CAAiC,MAAM,aAAN,CAAoB,OAApB,CAA4B,CAA5B,CAAjC,CAAnB;AACA,UAAM,SAAS,KAAK,IAAL,CAAU,kBAAV,CAA6B,UAA7B,CAAf;AACA,UAAM,SAAS,MAAM,MAArB;;AAEA,UAAI,WAAW,KAAK,WAApB,EAAiC;AAC/B,aAAK,KAAL,CAAW,MAAX,EADF,KAEK;AACH,aAAK,OAAL,CAAa,MAAb;;AAEF,WAAK,MAAL,CAAY,MAAZ;;AAEA;AACA;AACA,aAAO,KAAP;AACD;;;gCAEW,K,EAAoC;AAC9C,UAAM,SAAS,MAAM,MAArB;AACA,aAAO,UAAP,CAAkB,CAAlB;AACA,WAAK,aAAL;AACA,WAAK,SAAL;AACD;;AAED;;;;4BACc,CACb,C,CADe;;;AAGhB;;;;8BACgB,CAAE;AACjB;;;EA7MsC,kBAAE,O;;AAAtB,W,CAGZ,O,GAAU,2B;kBAHE,W","file":"SimpleShape.js","sourcesContent":["/** @flow\n * StratoDem Analytics : SimpleShape\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport { TouchMarker } from '../../ext/index';\n\n\ntype T_ORIGINAL_EVENT = {\n  clientX: number,\n  clientY: number,\n  latlng: L.LatLng,\n  touches: Array<{clientX: number, clientY: number}>,\n}\ntype T_SIMPLESHAPE_OPTIONS = {\n  moveIcon?: L.DivIcon,\n  resizeIcon?: L.DivIcon,\n  touchMoveIcon?: L.DivIcon,\n  touchResizeIcon?: L.DivIcon,\n};\nconst DEFAULT_SIMPLESHAPE_OPTIONS: T_SIMPLESHAPE_OPTIONS = {\n  moveIcon: new L.DivIcon({\n    iconSize: new L.Point(8, 8),\n    className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move',\n  }),\n  resizeIcon: new L.DivIcon({\n    iconSize: new L.Point(8, 8),\n    className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize',\n  }),\n  touchMoveIcon: new L.DivIcon({\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move leaflet-touch-icon',\n  }),\n  touchResizeIcon: new L.DivIcon({\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize leaflet-touch-icon',\n  }),\n};\n\nexport default class SimpleShape extends L.Handler {\n  _shape: L.geoJSON;\n\n  static options = DEFAULT_SIMPLESHAPE_OPTIONS;\n\n  initialize(shape: L.geoJSON, options: T_SIMPLESHAPE_OPTIONS): void {\n    // if touch, switch to touch icon\n    const moveIcon = L.Browser.touch\n      ? SimpleShape.options.touchMoveIcon\n      : SimpleShape.options.moveIcon;\n    const resizeIcon = L.Browser.touch\n      ? SimpleShape.options.touchResizeIcon\n      : SimpleShape.options.resizeIcon;\n\n    this._shape = shape;\n    L.Util.setOptions(this, {\n      moveIcon,\n      resizeIcon,\n      touchMoveIcon: SimpleShape.options.touchMoveIcon,\n      touchResizeIcon: SimpleShape.options.touchResizeIcon,\n      ...options,\n    });\n  }\n\n  /** Add listener hooks to this handler **/\n  addHooks(): void {\n    const shape = this._shape;\n    if (this._shape._map) {\n      this._map = this._shape._map;\n      shape.setStyle(shape.options.editing);\n\n      if (shape._map) {\n        this._map = shape._map;\n        if (!this._markerGroup) {\n          this._initMarkers();\n        }\n        this._map.addLayer(this._markerGroup);\n      }\n    }\n  }\n\n  /** Remove listener hooks from this handler **/\n  removeHooks(): void {\n    const shape = this._shape;\n\n    shape.setStyle(shape.options.original);\n\n    if (shape._map) {\n      this._unbindMarker(this._moveMarker);\n\n      this._resizeMarkers.forEach(marker => this._unbindMarker(marker));\n      this._resizeMarkers = null;\n\n      this._map.removeLayer(this._markerGroup);\n      delete this._markerGroup;\n    }\n\n    this._map = null;\n  }\n\n  /** Remove the edit markers from this layer **/\n  updateMarkers(): void {\n    this._markerGroup.clearLayers();\n    this._initMarkers();\n  }\n\n  _initMarkers(): void {\n    if (!this._markerGroup)\n      this._markerGroup = new L.LayerGroup();\n\n    // Create center marker\n    this._createMoveMarker();\n\n    // Create edge marker\n    this._createResizeMarker();\n  }\n\n  // eslint-disable-next-line\n  _createMoveMarker(): void { // Children override\n  }\n\n  // eslint-disable-next-line\n  _createResizeMarker(): void { // Children override\n  }\n\n  _createMarker(latlng: L.LatLng, icon: L.DivIcon | L.Icon): TouchMarker {\n    const marker = new TouchMarker(latlng, {\n      draggable: true,\n      icon,\n      zIndexOffset: 10,\n    });\n\n    this._bindMarker(marker);\n\n    this._markerGroup.addLayer(marker);\n\n    return marker;\n  }\n\n  _bindMarker(marker: TouchMarker): void {\n    marker\n      .on('dragstart', this._onMarkerDragStart, this)\n      .on('drag', this._onMarkerDrag, this)\n      .on('dragend', this._onMarkerDragEnd, this)\n      .on('touchstart', this._onTouchStart, this)\n      .on('touchmove', this._onTouchMove, this)\n      .on('MSPointerMove', this._onTouchMove, this)\n      .on('touchend', this._onTouchEnd, this)\n      .on('MSPointerUp', this._onTouchEnd, this);\n  }\n\n  _unbindMarker(marker: TouchMarker): void {\n    marker\n      .off('dragstart', this._onMarkerDragStart, this)\n      .off('drag', this._onMarkerDrag, this)\n      .off('dragend', this._onMarkerDragEnd, this)\n      .off('touchstart', this._onTouchStart, this)\n      .off('touchmove', this._onTouchMove, this)\n      .off('MSPointerMove', this._onTouchMove, this)\n      .off('touchend', this._onTouchEnd, this)\n      .off('MSPointerUp', this._onTouchEnd, this);\n  }\n\n  _onMarkerDragStart(event: {target: TouchMarker}): void {\n    const marker = event.target;\n    marker.setOpacity(0);\n\n    this._shape.fire('editstart');\n  }\n\n  _fireEdit(): void {\n    this._shape.edited = true;\n    this._shape.fire('edit');\n  }\n\n  _onMarkerDrag(event: {target: TouchMarker}): void {\n    const marker = event.target;\n    const latlng = marker.getLatLng();\n\n    if (marker === this._moveMarker) // $FlowFixMe overridden in children\n      this._move(latlng);\n    else // $FlowFixMe overridden in children\n      this._resize(latlng);\n\n    this._shape.redraw();\n    this._shape.fire('editdrag');\n  }\n\n  _onMarkerDragEnd(event: {target: TouchMarker}): void {\n    const marker = event.target;\n    marker.setOpacity(1);\n\n    this._fireEdit();\n  }\n\n  _onTouchStart(event: {target: TouchMarker}): void {\n    SimpleShape.prototype._onMarkerDragStart.call(this, event);\n\n    if (typeof this._getCorners === 'function') {\n      // Save a reference to the opposite point\n      const corners = this._getCorners();\n      const marker = event.target;\n      const currentCornerIndex = marker._cornerIndex;\n\n      marker.setOpacity(0);\n\n      // Copyed from Edit.Rectangle.js line 23 _onMarkerDragStart()\n      // Latlng is null otherwise.\n      this._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\n      this._toggleCornerMarkers(0, currentCornerIndex);\n    }\n\n    this._shape.fire('editstart');\n  }\n\n  _onTouchMove(event: {target: TouchMarker, originalEvent: T_ORIGINAL_EVENT}): boolean {\n    const layerPoint = this._map.mouseEventToLayerPoint(event.originalEvent.touches[0]);\n    const latlng = this._map.layerPointToLatLng(layerPoint);\n    const marker = event.target;\n\n    if (marker === this._moveMarker) // $FlowFixMe overridden in children\n      this._move(latlng);\n    else // $FlowFixMe overridden in children\n      this._resize(latlng);\n\n    this._shape.redraw();\n\n    // prevent touchcancel in IOS\n    // e.preventDefault();\n    return false;\n  }\n\n  _onTouchEnd(event: {target: TouchMarker}): void {\n    const marker = event.target;\n    marker.setOpacity(1);\n    this.updateMarkers();\n    this._fireEdit();\n  }\n\n  // eslint-disable-next-line\n  _move(): void { // Children override\n  }\n\n  // eslint-disable-next-line\n  _resize(): void { // Children override\n  }\n}\n"]}