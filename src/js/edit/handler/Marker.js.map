{"version":3,"sources":["../../../es6/edit/handler/Marker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA;;;;AAEA;;AACA;;;;;;IAGqB,M;;;;;;;;;;+BAIR,M,EAAqB,O,EAAuB;AACrD,WAAK,OAAL,GAAe,MAAf;AACA,wBAAE,UAAF,CAAa,IAAb,EAAmB,OAAnB;AACD;;AAED;;;;+BACiB;AACf,UAAM,SAAS,KAAK,OAApB;;AAEA,aAAO,QAAP,CAAgB,MAAhB;AACA,aAAO,EAAP,CAAU,SAAV,EAAqB,KAAK,UAA1B,EAAsC,MAAtC;AACA,WAAK,sBAAL;AACD;;AAED;;;;kCACoB;AAClB,UAAM,SAAS,KAAK,OAApB;;AAEA,aAAO,QAAP,CAAgB,OAAhB;AACA,aAAO,GAAP,CAAW,SAAX,EAAsB,KAAK,UAA3B,EAAuC,MAAvC;AACA,WAAK,sBAAL;AACD;;;+BAEU,K,EAAgC;AACzC,UAAM,QAAQ,MAAM,MAApB;AACA,YAAM,MAAN,GAAe,IAAf;AACA,WAAK,IAAL,CAAU,IAAV,CAAe,gBAAM,QAArB,EAA+B,EAAC,YAAD,EAA/B;AACD;;;6CAE8B;AAC7B,UAAM,OAAO,KAAK,OAAL,CAAa,KAA1B;;AAEA;AACA;AACA;AACA,UAAI,CAAC,IAAL,EACE;;AAEF;AACA,WAAK,KAAL,CAAW,OAAX,GAAqB,MAArB;;AAEA,UAAI,kBAAE,OAAF,CAAU,QAAV,CAAmB,IAAnB,EAAyB,8BAAzB,CAAJ,EAA8D;AAC5D,0BAAE,OAAF,CAAU,WAAV,CAAsB,IAAtB,EAA4B,8BAA5B;AACA;AACA,eAAO,aAAP,CAAqB,IAArB,EAA2B,CAAC,CAA5B;AACD,OAJD,MAIO;AACL,0BAAE,OAAF,CAAU,QAAV,CAAmB,IAAnB,EAAyB,8BAAzB;AACA;AACA,eAAO,aAAP,CAAqB,IAArB,EAA2B,CAA3B;AACD;;AAED,WAAK,KAAL,CAAW,OAAX,GAAqB,EAArB;AACD;;;kCAEoB,I,EAAc,M,EAAsB;AACvD,UAAM,gBAAgB,SAAS,KAAK,KAAL,CAAW,SAApB,EAA+B,EAA/B,IAAqC,MAA3D;AACA,UAAM,iBAAiB,SAAS,KAAK,KAAL,CAAW,UAApB,EAAgC,EAAhC,IAAsC,MAA7D;;AAEA;AACA;AACA,WAAK,KAAL,CAAW,SAAX,GAA0B,aAA1B;AACA;AACA,WAAK,KAAL,CAAW,UAAX,GAA2B,cAA3B;AACD;;;EAnEiC,kBAAE,O,GAhBtC;;;;;;;;;;kBAgBqB,M;;;AAuErB,kBAAE,MAAF,CAAS,WAAT,CAAqB,SAAS,OAAT,GAAmB;AACtC,MAAI,MAAJ,EAAY;AACV,SAAK,OAAL,GAAe,IAAI,MAAJ,CAAW,IAAX,CAAf;;AAEA,QAAI,KAAK,OAAL,CAAa,QAAjB,EAA2B;AACzB,WAAK,OAAL,CAAa,MAAb;AACD;AACF;AACF,CARD","file":"Marker.js","sourcesContent":["/** @flow\n * StratoDem Analytics : Marker\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport { TouchMarker } from '../../ext/index';\nimport Event from '../../Event';\n\n\nexport default class Marker extends L.Handler {\n  _marker: TouchMarker;\n  _map: L.Map;\n\n  initialize(marker: TouchMarker, options: Object): void {\n    this._marker = marker;\n    L.setOptions(this, options);\n  }\n\n  /** Add listener hooks to this handler **/\n  addHooks(): void {\n    const marker = this._marker;\n\n    marker.dragging.enable();\n    marker.on('dragend', this._onDragEnd, marker);\n    this._toggleMarkerHighlight();\n  }\n\n  /** Remove listener hooks from this handler **/\n  removeHooks(): void {\n    const marker = this._marker;\n\n    marker.dragging.disable();\n    marker.off('dragend', this._onDragEnd, marker);\n    this._toggleMarkerHighlight();\n  }\n\n  _onDragEnd(event: {target: L.Layer}): void {\n    const layer = event.target;\n    layer.edited = true;\n    this._map.fire(Event.EDITMOVE, {layer});\n  }\n\n  _toggleMarkerHighlight(): void {\n    const icon = this._marker._icon;\n\n    // Don't do anything if this layer is a marker but doesn't have an icon. Markers\n    // should usually have icons. If using Leaflet.draw with Leaflet.markercluster there\n    // is a chance that a marker doesn't.\n    if (!icon)\n      return;\n\n    // This is quite naughty, but I don't see another way of doing it. (short of setting a new icon)\n    icon.style.display = 'none';\n\n    if (L.DomUtil.hasClass(icon, 'leaflet-edit-marker-selected')) {\n      L.DomUtil.removeClass(icon, 'leaflet-edit-marker-selected');\n      // Offset as the border will make the icon move.\n      Marker._offsetMarker(icon, -4);\n    } else {\n      L.DomUtil.addClass(icon, 'leaflet-edit-marker-selected');\n      // Offset as the border will make the icon move.\n      Marker._offsetMarker(icon, 4);\n    }\n\n    icon.style.display = '';\n  }\n\n  static _offsetMarker(icon: L.Icon, offset: number): void {\n    const iconMarginTop = parseInt(icon.style.marginTop, 10) - offset;\n    const iconMarginLeft = parseInt(icon.style.marginLeft, 10) - offset;\n\n    // TODO don't overwrite\n    // eslint-disable-next-line\n    icon.style.marginTop = `${iconMarginTop}px`;\n    // eslint-disable-next-line\n    icon.style.marginLeft = `${iconMarginLeft}px`;\n  }\n}\n\n\nL.Marker.addInitHook(function addInit() {\n  if (Marker) {\n    this.editing = new Marker(this);\n\n    if (this.options.editable) {\n      this.editing.enable();\n    }\n  }\n});\n"]}