{"version":3,"sources":["../../es6/edit/EditToolbar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;;AAEA;;;;AACA;;;;AAEA;;AACA;;;;AAkBA,IAAM,8BAAqD;AACzD,QAAM;AACJ,yBAAqB;AACnB,iBAAW,QADQ;;AAGnB,YAAM,IAHa;AAInB,iBAAW,SAJQ;AAKnB,mBAAa,GALM;;AAOnB;AACA,qBAAe;AARI;AADjB,GADmD;AAazD,UAAQ,EAbiD;AAczD,QAAM,IAdmD;AAezD,gBAAc,IAf2C,CAepC;;AAfoC,CAA3D,C,CAlCA;;;;;;;;;;IAsDM,W;;;;;;;;;;+BAOO,O,EAAsC;AAC/C,WAAK,aAAL,GAAqB,mBAArB;;AAEA,yIAAiB;AACf,cAAM;AACJ,0DACK,YAAY,OAAZ,CAAoB,IAApB,CAAyB,mBAD9B,EAGI,OAAO,QAAQ,IAAf,KAAwB,WAAxB,IAAuC,QAAQ,IAAR,CAAa,mBAAb,KAAqC,WAA5E,GACI,QAAQ,IAAR,CAAa,mBADjB,GAEI,EALR;AADI,SADS;AAUf,2CAAY,YAAY,OAAZ,CAAoB,MAAhC,EAA2C,QAAQ,MAAnD,CAVe;AAWf,yCAAU,YAAY,OAAZ,CAAoB,IAA9B,EAAuC,QAAQ,IAA/C,CAXe;AAYf,sBAAc,QAAQ;AAZP,OAAjB;;AAeA,WAAK,qBAAL,GAA6B,CAA7B;AACD;;AAED;;;;oCACgB,G,EAEkC;AAChD,UAAM,eAAe,KAAK,OAAL,CAAa,YAAlC;AACA,aAAO,CACL;AACE,iBAAS,KAAK,OAAL,CAAa,IADxB;AAEE,iBAAS,gBAAS,GAAT,EAAc;AACrB,oCADqB;AAErB,+BAAqB,KAAK,OAAL,CAAa,IAAb,CAAkB,mBAFlB;AAGrB,gBAAM,KAAK,OAAL,CAAa;AAHE,SAAd,CAFX;AAOE,eAAO,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B;AAPxC,OADK,EAUL;AACE,iBAAS,KAAK,OAAL,CAAa,MADxB;AAEE,iBAAS,kBAAW,GAAX,EAAgB,EAAC,0BAAD,EAAhB,CAFX;AAGE,eAAO,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B;AAHxC,OAVK,CAAP;AAgBD;;AAED;;;;iCACmC;AACjC,aAAO,CACL;AACE,eAAO,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,IAA/B,CAAoC,KAD7C;AAEE,cAAM,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,IAA/B,CAAoC,IAF5C;AAGE,kBAAU,KAAK,KAHjB;AAIE,iBAAS;AAJX,OADK,EAOL;AACE,eAAO,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,MAA/B,CAAsC,KAD/C;AAEE,cAAM,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,MAA/B,CAAsC,IAF9C;AAGE,kBAAU,KAAK,OAHjB;AAIE,iBAAS;AAJX,OAPK,CAAP;AAcD;;AAED;;;;+BACW,G,EAAuB;AAChC,UAAM,+IAA6B,GAA7B,CAAN;AACA,WAAK,cAAL;;AAEA,WAAK,OAAL,CAAa,YAAb,CAA0B,EAA1B,CAA6B,sBAA7B,EAAqD,KAAK,cAA1D,EAA0E,IAA1E;;AAEA,aAAO,SAAP;AACD;;;oCAEqB;AACpB,WAAK,OAAL,CAAa,YAAb,CAA0B,GAA1B,CAA8B,sBAA9B,EAAsD,KAAK,cAA3D,EAA2E,IAA3E;;AAEA;AACD;;AAED;;;;8BACgB;AACd,UAAI,CAAC,KAAK,OAAL,EAAL,EACE;;AAEF,WAAK,WAAL,CAAiB,OAAjB,CAAyB,YAAzB;AACA;AACD;;;4BAEa;AACZ,WAAK,WAAL,CAAiB,OAAjB,CAAyB,IAAzB;AACA,UAAI,KAAK,WAAT,EACE,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAzB;AACH;;;sCAEuB;AACtB,WAAK,WAAL,CAAiB,OAAjB,CAAyB,eAAzB;AACA,UAAI,KAAK,WAAT,EACE,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAzB;AACH;;;qCAEsB;AACrB,UAAM,eAAe,KAAK,OAAL,CAAa,YAAlC;AACA,UAAM,YAAY,aAAa,SAAb,GAAyB,MAAzB,KAAoC,CAAtD;AACA,UAAI,eAAJ;;AAEA,UAAI,KAAK,OAAL,CAAa,IAAjB,EAAuB;AACrB,iBAAS,KAAK,MAAL,CAAY,YAAK,IAAjB,EAAuB,MAAhC;;AAEA,YAAI,SAAJ,EACE,kBAAE,OAAF,CAAU,WAAV,CAAsB,MAAtB,EAA8B,kBAA9B,EADF,KAGE,kBAAE,OAAF,CAAU,QAAV,CAAmB,MAAnB,EAA2B,kBAA3B;;AAEF,eAAO,YAAP,CACE,OADF,EAEE,YACI,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,IADnC,GAEI,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,YAJrC;AAMD;;AAED,UAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACvB,iBAAS,KAAK,MAAL,CAAY,cAAO,IAAnB,EAAyB,MAAlC;;AAEA,YAAI,SAAJ,EACE,kBAAE,OAAF,CAAU,WAAV,CAAsB,MAAtB,EAA8B,kBAA9B,EADF,KAGE,kBAAE,OAAF,CAAU,QAAV,CAAmB,MAAnB,EAA2B,kBAA3B;;AAEF,eAAO,YAAP,CACE,OADF,EAEE,YACI,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,MADnC,GAEI,eAAU,IAAV,CAAe,OAAf,CAAuB,OAAvB,CAA+B,cAJrC;AAMD;AACF;;;;;AA9IG,W,CAIG,I;AAJH,W,CAKG,O,GAAU,2B;kBA4IJ,W","file":"EditToolbar.js","sourcesContent":["/** @flow\n * StratoDem Analytics : EditToolbar\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport drawLocal from '../draw';\nimport Toolbar from '../Toolbar';\n\nimport { TYPE_EDIT } from './handler/constants';\nimport { Delete, Edit, Circle, Marker, Rectangle, Poly, PolyVerticesEdit } from './handler/index';\n\n\ntype T_ACTION = {title: string, text: string, callback: () => void, context: Object};\ntype T_EDITTOOLBAR_OPTIONS = {\n  edit: {\n    selectedPathOptions: {\n      dashArray?: string,\n      fill?: boolean,\n      fillColor?: string,\n      fillOpacity?: number,\n      maintainColor?: boolean,\n    },\n  },\n  remove?: Object,\n  poly?: Object | null,\n  featureGroup: Object | null,\n};\nconst DEFAULT_EDITTOOLBAR_OPTIONS: T_EDITTOOLBAR_OPTIONS = {\n  edit: {\n    selectedPathOptions: {\n      dashArray: '10, 10',\n\n      fill: true,\n      fillColor: '#fe57a1',\n      fillOpacity: 0.1,\n\n      // Whether to user the existing layers color\n      maintainColor: false,\n    },\n  },\n  remove: {},\n  poly: null,\n  featureGroup: null,  /* REQUIRED!\n  TODO: perhaps if not set then all layers on the map are selectable? */\n};\n\n\nclass EditToolbar extends Toolbar {\n  _selectedFeatureCount: number;\n  _toolbarClass: string;\n\n  static TYPE = TYPE_EDIT;\n  static options = DEFAULT_EDITTOOLBAR_OPTIONS;\n\n  initialize(options: T_EDITTOOLBAR_OPTIONS): void {\n    this._toolbarClass = 'leaflet-draw-edit';\n\n    super.initialize({\n      edit: {\n        selectedPathOptions: {\n          ...EditToolbar.options.edit.selectedPathOptions,\n          ...(\n            typeof options.edit !== 'undefined' && options.edit.selectedPathOptions !== 'undefined'\n              ? options.edit.selectedPathOptions\n              : {}),\n        },\n      },\n      remove: {...EditToolbar.options.remove, ...options.remove},\n      poly: {...EditToolbar.options.poly, ...options.poly},\n      featureGroup: options.featureGroup,\n    });\n\n    this._selectedFeatureCount = 0;\n  }\n\n  /** Get mode handlers information **/\n  getModeHandlers(map: L.Map): [\n    {enabled: any, handler: Edit, title: string},\n    {enabled: any, handler: Delete, title: string}] {\n    const featureGroup = this.options.featureGroup;\n    return [\n      {\n        enabled: this.options.edit,\n        handler: new Edit(map, {\n          featureGroup,\n          selectedPathOptions: this.options.edit.selectedPathOptions,\n          poly: this.options.poly,\n        }),\n        title: drawLocal.edit.toolbar.buttons.edit,\n      },\n      {\n        enabled: this.options.remove,\n        handler: new Delete(map, {featureGroup}),\n        title: drawLocal.edit.toolbar.buttons.remove,\n      },\n    ];\n  }\n\n  /** Get actions information **/\n  getActions(): [T_ACTION, T_ACTION] {\n    return [\n      {\n        title: drawLocal.edit.toolbar.actions.save.title,\n        text: drawLocal.edit.toolbar.actions.save.text,\n        callback: this._save,\n        context: this,\n      },\n      {\n        title: drawLocal.edit.toolbar.actions.cancel.title,\n        text: drawLocal.edit.toolbar.actions.cancel.text,\n        callback: this.disable,\n        context: this,\n      },\n    ];\n  }\n\n  /** Adds the toolbar to the map **/\n  addToolbar(map: L.Map): L.DomUtil {\n    const container = super.addToolbar(map);\n    this._checkDisabled();\n\n    this.options.featureGroup.on('layeradd layerremove', this._checkDisabled, this);\n\n    return container;\n  }\n\n  removeToolbar(): void {\n    this.options.featureGroup.off('layeradd layerremove', this._checkDisabled, this);\n\n    super.removeToolbar();\n  }\n\n  /** Disables the toolbar **/\n  disable(): void {\n    if (!this.enabled())\n      return;\n\n    this._activeMode.handler.revertLayers();\n    super.disable();\n  }\n\n  _save(): void {\n    this._activeMode.handler.save();\n    if (this._activeMode)\n      this._activeMode.handler.disable();\n  }\n\n  _clearAllLayers(): void {\n    this._activeMode.handler.removeAllLayers();\n    if (this._activeMode)\n      this._activeMode.handler.disable();\n  }\n\n  _checkDisabled(): void {\n    const featureGroup = this.options.featureGroup;\n    const hasLayers = featureGroup.getLayers().length !== 0;\n    let button;\n\n    if (this.options.edit) {\n      button = this._modes[Edit.TYPE].button;\n\n      if (hasLayers)\n        L.DomUtil.removeClass(button, 'leaflet-disabled');\n      else\n        L.DomUtil.addClass(button, 'leaflet-disabled');\n\n      button.setAttribute(\n        'title',\n        hasLayers\n          ? drawLocal.edit.toolbar.buttons.edit\n          : drawLocal.edit.toolbar.buttons.editDisabled\n      );\n    }\n\n    if (this.options.remove) {\n      button = this._modes[Delete.TYPE].button;\n\n      if (hasLayers)\n        L.DomUtil.removeClass(button, 'leaflet-disabled');\n      else\n        L.DomUtil.addClass(button, 'leaflet-disabled');\n\n      button.setAttribute(\n        'title',\n        hasLayers\n          ? drawLocal.edit.toolbar.buttons.remove\n          : drawLocal.edit.toolbar.buttons.removeDisabled\n      );\n    }\n  }\n}\n\nexport default EditToolbar;\n"]}