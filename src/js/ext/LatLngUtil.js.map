{"version":3,"sources":["../../es6/ext/LatLngUtil.js"],"names":[],"mappings":";;;;;;AAUA;;;;;;AAGA;AACA,IAAM,aAAa;AACjB;AACA,cAFiB,wBAEJ,OAFI,EAEuC;AAAA;;AACtD,WAAO,QAAQ,GAAR,CAAY;AAAA,aAAM;AACtB,cAAM,OAAN,CAAc,EAAd,IAAoB,MAAK,YAAL,CAAkB,EAAlB,CAApB,GAA4C,MAAK,WAAL,CAAiB,EAAjB;AAD5B;AAAA,KAAZ,CAAP;AAED,GALgB;;;AAOjB;AACA,aARiB,uBAQL,MARK,EAQuB;AACtC,WAAO,kBAAE,MAAF,CAAS,OAAO,GAAhB,EAAqB,OAAO,GAA5B,CAAP;AACD;AAVgB,CAAnB,C,CAdA;;;;;;;;;;kBA2Be,U","file":"LatLngUtil.js","sourcesContent":["/** @flow\n * StratoDem Analytics : LatLngUtil\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\n\n// TODO import me and add to Leaflet\nconst LatLngUtil = {\n  /** Clone the latLng point or points or nested points and return an array with those points **/\n  cloneLatLngs(latlngs: Array<L.LatLng>): Array<L.LatLng> {\n    return latlngs.map(ll => // TODO should this be this?\n      (Array.isArray(ll) ? this.cloneLatLngs(ll) : this.cloneLatLng(ll)));\n  },\n\n  /** Clone the latLng and return a new LatLng object. **/\n  cloneLatLng(latlng: L.LatLng): L.LatLng {\n    return L.latLng(latlng.lat, latlng.lng);\n  },\n};\n\nexport default LatLngUtil;\n"]}