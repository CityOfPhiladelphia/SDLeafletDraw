{"version":3,"sources":["../es6/Control.Draw.js"],"names":[],"mappings":"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","file":"Control.Draw.js","sourcesContent":["/** @flow\n * StratoDem Analytics : Control.Draw\n * Principal Author(s) : Michael Clawar\n * Secondary Author(s) :\n * Description :\n *\n *  (c) 2016- StratoDem Analytics, LLC\n *  All Rights Reserved\n */\n\nimport L from 'leaflet';\n\nimport DrawToolbar from './draw/DrawToolbar';\nimport EditToolbar from './edit/EditToolbar';\nimport Toolbar from './Toolbar';\n\n\ntype T_CD_OPTIONS = {\n  position: 'topleft' | 'topright' | 'bottomleft' | 'bottomright',\n  draw: Object,\n  edit: boolean,\n};\n\nconst DEFAULT_CD_OPTIONS: T_CD_OPTIONS = {\n  position: 'topleft',\n  draw: {},\n  edit: false,\n};\n\nexport default class DrawControl extends L.Control {\n  static options = DEFAULT_CD_OPTIONS;\n\n  initialize(options: T_CD_OPTIONS): void {\n    if (L.version < '0.7') {\n      throw new Error('Leaflet.draw 0.2.3+ requires Leaflet 0.7.0+. '\n        + 'Download latest from https://github.com/Leaflet/Leaflet/');\n    }\n\n    super.initialize(this, {...DrawControl.options, ...options});\n    this._toolbars = {};\n\n    // Initialize toolbars\n    if (DrawToolbar && this.options.draw) {\n      this._toolbars[DrawToolbar.TYPE] = new DrawToolbar(this.options.draw);\n\n      // Listen for when toolbar is enabled\n      this._toolbars[DrawToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n    }\n\n    if (EditToolbar && this.options.edit) {\n      this._toolbars[EditToolbar.TYPE] = new EditToolbar(this.options.edit);\n\n      // Listen for when toolbar is enabled\n      this._toolbars[EditToolbar.TYPE].on('enable', this._toolbarEnabled, this);\n    }\n    L.toolbar = this;   // set global var for editing the toolbar\n  }\n\n  /** Adds the toolbar container to the map **/\n  onAdd(map: L.Map): Toolbar {\n    const container = L.DomUtil.create('div', 'leaflet-draw');\n    let addedTopClass = false;\n    const topClassName = 'leaflet-draw-toolbar-top';\n\n    Object.keys(this._toolbars).forEach((k: string) => {\n      const toolbarContainer = this._toolbars[k].addToolbar(map);\n\n      if (toolbarContainer) {\n        // Add class to the first toolbar to remove the margin\n        if (!addedTopClass) {\n          if (!L.DomUtil.hasClass(toolbarContainer, topClassName)) {\n            L.DomUtil.addClass(toolbarContainer.childNodes[0], topClassName);\n          }\n          addedTopClass = true;\n        }\n\n        container.appendChild(toolbarContainer);\n      }\n    });\n\n    return container;\n  }\n\n  /** Removes the toolbars from the map toolbar container **/\n  onRemove(): void {\n    Object.keys(this._toolbars).forEach((k: string) => {\n      this._toolbars[k].removeToolbar();\n    });\n  }\n\n  /** Sets options to all toolbar instances **/\n  setDrawingOptions(options: T_CD_OPTIONS): void {\n    Object.keys(this._toolbars).forEach((k: string) => {\n      if (this._toolbars[k] instanceof DrawToolbar)\n        this._toolbars[k].setOptions(options);\n    });\n  }\n\n  _toolbarEnabled(event: {target: Toolbar}): void {\n    const enabledToolbar = event.target;\n\n    Object.keys(this._toolbars).forEach((k: string) => {\n      if (this._toolbars[k] !== enabledToolbar)\n        this._toolbars[k].disable();\n    });\n  }\n}\n\nL.Map.mergeOptions({\n  drawControlTooltips: true,\n  drawControl: false,\n});\n\nL.Map.addInitHook(function addHook() {\n  if (this.options.drawControl) {\n    this.drawControl = new DrawControl();\n    this.addControl(this.drawControl);\n  }\n});\n"]}